// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package postgresql

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "postgresql", asset.ModuleFieldsPri, AssetPostgresql); err != nil {
		panic(err)
	}
}

// AssetPostgresql returns asset data.
// This is the base64 encoded zlib format compressed contents of module/postgresql.
func AssetPostgresql() string {
	return "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"
}
